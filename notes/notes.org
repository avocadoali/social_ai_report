
* Todo
** Report
*** Concept overview
- [ ]
*** Method
- [ ] Add picture of the dataset
- [ ] add overview of the models
- [ ] Model selection process, add the features and the metrics on what basis we decided the models
- [ ] How many datapoints were used


** Code
Use Baris dataset
- [-] Make all figure again for the report
  Ballistic integration and our integration model
  - [-] acceleration prediction x- and y-components
  - [-] acceleration equlvalence x- and y-components
  Our integration model
  - [X] prediction of the velocity
  - [X] prediction of the distance

- [ ] Clean up
- [ ] Fix the constant error in the velocity prediction
- [ ] bash scripts
- [ ] readme + documentation



* Method
Formula list
- distance and velocity formula
- accleration formula
- rewritten in matrix form
- split into x and y components
- split model into two models





* Structure
Abstract 
- scene aware and social aware motion prediction
- some paths are physically possible but socially improbable
- introduction of forces between cars that better describe the interaction between cars

Problem statement
- underying neural network has a discretization problem
- create a better discrete integration model
- model for the distances and velocity should compute matchung acceleration 

Concept overview
- using a linear model to estimate the acceleration
- will use linear regression to estimate the coefficients of the underlying model
- then rearrange the model such that it output the velocity and distance accurately again




Description of the proposed method and the implementation
- introduce the dataset:
    - drone footage
    - different scenarios
    - X datapoints in total
    - show the columns

- we tested X different linear models
- most successfull one was this
- note: all columns are split into x- and y-components
- can split up our model for simplicity and code style

- the tests were run on over X datapoints and Y different datasets
- data was split into a training and a test set using the typical X:Y splitting method

- results: 
    - mse, r-score, and X for the evaluation 
    - show the accuracy of the acceleration prediction

    - problems:
        - Constant error might be due to rounding errors?
        - outlier data


Conclusions and future work
- results seem promising
- keep in mind this is only a linear model
- but might be sufficient for the neural network
- actually test it with the neural network
- test on other datasets



** Results
*** Strucuter
Results of acceleration prediction (Linear Model Disance and Velocity)

Prediction Acceleration (Linear Model, Distance)
Prediction Acceleration (Linear Model, Velocity)

Acceleration Equivalance (Linear Model)
Acceleration Equivalance (Ballistic integration)


*** Notes
Results for the prediction of the model
Performance Metrics:
    What specific metrics were used to evaluate the performance of your model?
    Can you provide a summary of the results for each metric, including any significant findings or trends observed?

- For evaluation we used, MSE, MAE and r-square score
- explain what these are and what the optimal values are for these metrics
- we predicted the accelerations of both methods
  for each x and y components

Make latex table for this
|                             | MSE | MAE | r-score |
| our integration model       | A   | B   | C       |
| ballistic integration model | D   | E   | F       |

Visualization of Results:
    Have you prepared any visualizations to accompany the numerical results?
    How do these visualizations aid in the interpretation and understanding of the model's performance?

- Visualized the results using the provided drone-dataset-tool
- had to rearange the formula using the same coefficients which were determined by the linear regression model
Implications and Future Work:
    What are the implications of your results for real-world applications?
    Based on your findings, what are the next steps for further research or improvement?

- The accuracy of the acceleration model seems to be better than that of the ballistic intergration model
- our results now have to plugged into the neural network which the previous team was working with


I have to write a report of a project I did for uni. This is the methods section. Can you help me with the results section? What do I have to focus on?


* Sources

Public dataset:
https://levelxdata.com/

inD
https://levelxdata.com/ind-dataset/

rounD
https://levelxdata.com/round-dataset/

exiD
https://levelxdata.com/exid-dataset/

Drone tool:
https://github.com/ika-rwth-aachen/drone-dataset-tools?tab=readme-ov-file

Paper from di liu